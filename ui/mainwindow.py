# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow
from PyQt5.QtGui import QIcon
import os, shutil, re


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 600)
        MainWindow.setMinimumSize(QtCore.QSize(600, 600))
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: rgb(240, 240, 240);")
        self.horizontalLayout = QtWidgets.QHBoxLayout(MainWindow)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.gridLayout.setObjectName("gridLayout")
        self.btn_choose = QtWidgets.QPushButton(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_choose.setFont(font)
        self.btn_choose.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_choose.setStyleSheet("")
        self.btn_choose.setObjectName("btn_choose")
        self.btn_choose.clicked.connect(self.choose_files) # Connecte le bouton à la fonction choose_files
        self.gridLayout.addWidget(self.btn_choose, 1, 0, 1, 2)
        self.btn_rename = QtWidgets.QPushButton(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_rename.setFont(font)
        self.btn_rename.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_rename.setObjectName("btn_rename")
        self.btn_rename.clicked.connect(self.rename_files)
        self.gridLayout.addWidget(self.btn_rename, 3, 1, 1, 1)
        self.label_infos = QtWidgets.QLabel(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_infos.setFont(font)
        self.label_infos.setAlignment(QtCore.Qt.AlignCenter)
        self.label_infos.setObjectName("label_infos")
        self.gridLayout.addWidget(self.label_infos, 0, 0, 1, 2)
        self.list_files = QtWidgets.QListWidget(MainWindow)
        self.list_files.setObjectName("list_files")
        self.gridLayout.addWidget(self.list_files, 2, 0, 1, 2)
        self.btn_cancel = QtWidgets.QPushButton(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.btn_cancel.setFont(font)
        self.btn_cancel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.btn_cancel.setMouseTracking(False)
        self.btn_cancel.setObjectName("btn_cancel")
        self.btn_cancel.clicked.connect(self.cancel)
        self.gridLayout.addWidget(self.btn_cancel, 3, 0, 1, 1)
        self.label_copyright = QtWidgets.QLabel(MainWindow)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setBold(True)
        font.setWeight(75)
        self.label_copyright.setFont(font)
        self.label_copyright.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_copyright.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.label_copyright.setObjectName("label_copyright")
        self.gridLayout.addWidget(self.label_copyright, 4, 1, 1, 1)
        self.horizontalLayout.addLayout(self.gridLayout)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "FileForge"))
        self.btn_choose.setText(_translate("MainWindow", "Choisir des fichiers"))
        self.btn_rename.setText(_translate("MainWindow", "Renommer les fichiers"))
        self.label_infos.setText(_translate("MainWindow", "Format de fichier accepté : BATmode220__2023-11-27_02-42-31_0001954.wav"))
        self.btn_cancel.setText(_translate("MainWindow", "Annuler"))
        self.label_copyright.setText(_translate("MainWindow", "Programme développé par Thomas Lys"))

    @QtCore.pyqtSlot()
    def choose_files(self):
        """Ouvre une boîte de dialogue pour sélectionner des fichiers à renommer"""
        self.list_files.clear()
        self.files = QtWidgets.QFileDialog.getOpenFileNames(self, "Choisir des fichiers", os.path.expanduser('~/Documents'), "Fichiers audio (*.wav)")[0]
        
        pattern = r'BATmode\d+__\d{4}-\d{2}-\d{2}_\d{2}-\d{2}-\d{2}_\d{7}'
        for file in self.files:
            if re.match(pattern, os.path.basename(file)):
                self.list_files.addItem(file)

    @QtCore.pyqtSlot()
    def rename_files(self):
        """Ouvre une boîte de dialogue pour sélectionner le dossier ou copier les fichiers renommés si des fichiers ont été sélectionnés"""
        if self.list_files.count() == 0:
            return
        self.folder = QtWidgets.QFileDialog.getExistingDirectory(self, "Choisir un dossier", os.path.expanduser('~/Documents'))
        
        """Renomme les fichiers sélectionnés"""
        for file in self.files:
            file_name = os.path.basename(file)
            file_prefixe = file_name.split('__')[0]
            file_suffixe = file_name.split('__')[1]
            file_date = file_suffixe.split('_')[0]
            file_time = file_suffixe.split('_')[1]

            number = "00" + file_prefixe.split('BATmode')[1]

            year = file_date.split('-')[0]
            month = file_date.split('-')[1]
            day = file_date.split('-')[2]

            hour = file_time.split('-')[0]
            minute = file_time.split('-')[1]
            second = file_time.split('-')[2]

            new_file_name = 'S4U' + number + '_' + year + month + day + '_' + hour + minute + second + '.wav'
            new_file_path = os.path.join(self.folder, new_file_name)
            shutil.copy(file, new_file_path)
        
        self.list_files.clear()

    @QtCore.pyqtSlot()
    def cancel(self):
        """Annule la sélection de fichiers"""
        self.list_files.clear()

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    
    MainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)

    MainWindow.show()
    sys.exit(app.exec_())
